name: Fetch and Process Remote SmartDNS Rules Separately

on:
  schedule:
    # 每天凌晨3点执行 (UTC时间，根据需要调整)
    - cron: '0 3 * * *'
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write # 允许 GITHUB_TOKEN 写入仓库内容 (推送提交)

jobs:
  fetch_and_process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # 检出你自己的仓库，以便提交结果

      - name: Fetch and process rules
        id: process_rules
        run: |
          # 定义输入URL和它们对应的输出文件名
          declare -A RULE_SOURCES
          RULE_SOURCES["https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt"]="smartdns_proxy_rules.txt"
          RULE_SOURCES["https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt"]="smartdns_direct_rules.txt"

          PROCESSED_OUTPUT_FILES=()
          DOMAIN_TO_FORCE_DIRECT="services.googleapis.cn" # 定义要特殊处理的域名

          for url in "${!RULE_SOURCES[@]}"; do
            output_filename="${RULE_SOURCES[$url]}"
            tmp_processed_file="tmp_${output_filename}"

            echo "Processing: ${url}  -> ${output_filename}"

            # 下载文件内容，去除 "full:"，并且删除以 "regexp:" 开头的行
            if ! curl -fsSL "${url}" | \
                sed 's/^full://' | \
                grep -v '^regexp:' > "${tmp_processed_file}"; then
              echo "警告: 下载或处理 ${url} 失败。跳过此源。"
              rm -f "${tmp_processed_file}"
              continue
            fi

            # --- 开始自定义规则调整 ---
            if [ "${output_filename}" == "smartdns_proxy_rules.txt" ]; then
              echo "从 ${output_filename} (临时文件 ${tmp_processed_file}) 中移除 ${DOMAIN_TO_FORCE_DIRECT} ..."
              # 使用 grep -v 和临时文件来安全地移除行
              grep -v "^${DOMAIN_TO_FORCE_DIRECT}$" "${tmp_processed_file}" > "${tmp_processed_file}.mod"
              mv "${tmp_processed_file}.mod" "${tmp_processed_file}"
            fi

            if [ "${output_filename}" == "smartdns_direct_rules.txt" ]; then
              echo "确保 ${DOMAIN_TO_FORCE_DIRECT} 在 ${output_filename} (临时文件 ${tmp_processed_file}) 中..."
              # 追加域名，后续的 sort -u 会处理重复项
              echo "${DOMAIN_TO_FORCE_DIRECT}" >> "${tmp_processed_file}"
            fi
            # --- 结束自定义规则调整 ---

            if [ -s "${tmp_processed_file}" ]; then
              sort -u "${tmp_processed_file}" > "${output_filename}"
              echo "处理后的规则已保存到 ${output_filename}"
              echo "${output_filename} 中的总行数: $(wc -l < ${output_filename})"
              PROCESSED_OUTPUT_FILES+=("${output_filename}")
            else
              echo "警告: ${url} 的内容在处理后为空文件。${output_filename} 不会从此源创建或更新。"
            fi

            rm -f "${tmp_processed_file}"
          done

          if [ ${#PROCESSED_OUTPUT_FILES[@]} -gt 0 ]; then
            echo "成功处理的文件: ${PROCESSED_OUTPUT_FILES[*]}"
            echo "FILES_TO_COMMIT_LIST=${PROCESSED_OUTPUT_FILES[*]}" >> $GITHUB_ENV
          else
            echo "没有文件被成功处理或更新。"
            echo "FILES_TO_COMMIT_LIST=" >> $GITHUB_ENV
          fi

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [ -z "$FILES_TO_COMMIT_LIST" ]; then
            echo "上一步没有处理任何文件。无需提交。"
            exit 0
          fi

          IFS=' ' read -r -a files_to_stage <<< "$FILES_TO_COMMIT_LIST"
          echo "待检查暂存的文件: ${files_to_stage[*]}"
          
          added_any_file=false
          for file in "${files_to_stage[@]}"; do
            if [ -f "$file" ]; then
              git add "$file"
              echo "已将 $file 添加到暂存区。"
              added_any_file=true
            else
              echo "警告: 预期的文件 $file 未找到。跳过添加。"
            fi
          done

          if ! $added_any_file; then
            echo "没有文件实际被添加到暂存区。"
            exit 0
          fi
          
          if git diff --staged --quiet; then
            echo "暂存的文件中没有实际更改需要提交。"
          else
            changed_files_names=$(git diff --staged --name-only | tr '\n' ' ' | sed 's/ $//')
            echo "在以下文件中检测到更改: $changed_files_names. 正在提交..."
            git commit -m "Update SmartDNS rules (Automated): $changed_files_names"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
